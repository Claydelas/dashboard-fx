/*
 * This file is generated by jOOQ.
 */
package group18.dashboard.database.tables.records;


import group18.dashboard.database.enums.ImpressionAge;
import group18.dashboard.database.enums.ImpressionContext;
import group18.dashboard.database.enums.ImpressionGender;
import group18.dashboard.database.enums.ImpressionIncome;
import group18.dashboard.database.tables.Impression;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpressionRecord extends UpdatableRecordImpl<ImpressionRecord> implements Record9<LocalDateTime, Long, ImpressionGender, ImpressionAge, ImpressionIncome, ImpressionContext, Double, Integer, Integer> {

    private static final long serialVersionUID = -1556498071;

    /**
     * Setter for <code>PUBLIC.IMPRESSION.DATE</code>.
     */
    public void setDate(LocalDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.DATE</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.USER</code>.
     */
    public void setUser(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.USER</code>.
     */
    public Long getUser() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.GENDER</code>.
     */
    public void setGender(ImpressionGender value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.GENDER</code>.
     */
    public ImpressionGender getGender() {
        return (ImpressionGender) get(2);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.AGE</code>.
     */
    public void setAge(ImpressionAge value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.AGE</code>.
     */
    public ImpressionAge getAge() {
        return (ImpressionAge) get(3);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.INCOME</code>.
     */
    public void setIncome(ImpressionIncome value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.INCOME</code>.
     */
    public ImpressionIncome getIncome() {
        return (ImpressionIncome) get(4);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.CONTEXT</code>.
     */
    public void setContext(ImpressionContext value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.CONTEXT</code>.
     */
    public ImpressionContext getContext() {
        return (ImpressionContext) get(5);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.COST</code>.
     */
    public void setCost(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.COST</code>.
     */
    public Double getCost() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.CID</code>.
     */
    public void setCid(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.CID</code>.
     */
    public Integer getCid() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>PUBLIC.IMPRESSION.IMPRESSIONID</code>.
     */
    public void setImpressionid(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>PUBLIC.IMPRESSION.IMPRESSIONID</code>.
     */
    public Integer getImpressionid() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<LocalDateTime, Long, ImpressionGender, ImpressionAge, ImpressionIncome, ImpressionContext, Double, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<LocalDateTime, Long, ImpressionGender, ImpressionAge, ImpressionIncome, ImpressionContext, Double, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return Impression.IMPRESSION.DATE;
    }

    @Override
    public Field<Long> field2() {
        return Impression.IMPRESSION.USER;
    }

    @Override
    public Field<ImpressionGender> field3() {
        return Impression.IMPRESSION.GENDER;
    }

    @Override
    public Field<ImpressionAge> field4() {
        return Impression.IMPRESSION.AGE;
    }

    @Override
    public Field<ImpressionIncome> field5() {
        return Impression.IMPRESSION.INCOME;
    }

    @Override
    public Field<ImpressionContext> field6() {
        return Impression.IMPRESSION.CONTEXT;
    }

    @Override
    public Field<Double> field7() {
        return Impression.IMPRESSION.COST;
    }

    @Override
    public Field<Integer> field8() {
        return Impression.IMPRESSION.CID;
    }

    @Override
    public Field<Integer> field9() {
        return Impression.IMPRESSION.IMPRESSIONID;
    }

    @Override
    public LocalDateTime component1() {
        return getDate();
    }

    @Override
    public Long component2() {
        return getUser();
    }

    @Override
    public ImpressionGender component3() {
        return getGender();
    }

    @Override
    public ImpressionAge component4() {
        return getAge();
    }

    @Override
    public ImpressionIncome component5() {
        return getIncome();
    }

    @Override
    public ImpressionContext component6() {
        return getContext();
    }

    @Override
    public Double component7() {
        return getCost();
    }

    @Override
    public Integer component8() {
        return getCid();
    }

    @Override
    public Integer component9() {
        return getImpressionid();
    }

    @Override
    public LocalDateTime value1() {
        return getDate();
    }

    @Override
    public Long value2() {
        return getUser();
    }

    @Override
    public ImpressionGender value3() {
        return getGender();
    }

    @Override
    public ImpressionAge value4() {
        return getAge();
    }

    @Override
    public ImpressionIncome value5() {
        return getIncome();
    }

    @Override
    public ImpressionContext value6() {
        return getContext();
    }

    @Override
    public Double value7() {
        return getCost();
    }

    @Override
    public Integer value8() {
        return getCid();
    }

    @Override
    public Integer value9() {
        return getImpressionid();
    }

    @Override
    public ImpressionRecord value1(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public ImpressionRecord value2(Long value) {
        setUser(value);
        return this;
    }

    @Override
    public ImpressionRecord value3(ImpressionGender value) {
        setGender(value);
        return this;
    }

    @Override
    public ImpressionRecord value4(ImpressionAge value) {
        setAge(value);
        return this;
    }

    @Override
    public ImpressionRecord value5(ImpressionIncome value) {
        setIncome(value);
        return this;
    }

    @Override
    public ImpressionRecord value6(ImpressionContext value) {
        setContext(value);
        return this;
    }

    @Override
    public ImpressionRecord value7(Double value) {
        setCost(value);
        return this;
    }

    @Override
    public ImpressionRecord value8(Integer value) {
        setCid(value);
        return this;
    }

    @Override
    public ImpressionRecord value9(Integer value) {
        setImpressionid(value);
        return this;
    }

    @Override
    public ImpressionRecord values(LocalDateTime value1, Long value2, ImpressionGender value3, ImpressionAge value4, ImpressionIncome value5, ImpressionContext value6, Double value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImpressionRecord
     */
    public ImpressionRecord() {
        super(Impression.IMPRESSION);
    }

    /**
     * Create a detached, initialised ImpressionRecord
     */
    public ImpressionRecord(LocalDateTime date, Long user, ImpressionGender gender, ImpressionAge age, ImpressionIncome income, ImpressionContext context, Double cost, Integer cid, Integer impressionid) {
        super(Impression.IMPRESSION);

        set(0, date);
        set(1, user);
        set(2, gender);
        set(3, age);
        set(4, income);
        set(5, context);
        set(6, cost);
        set(7, cid);
        set(8, impressionid);
    }
}
