/*
 * This file is generated by jOOQ.
 */
package group18.dashboard.database.tables;


import group18.dashboard.database.Keys;
import group18.dashboard.database.Public;
import group18.dashboard.database.tables.records.CampaignRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Campaign extends TableImpl<CampaignRecord> {

    private static final long serialVersionUID = -1914199281;

    /**
     * The reference instance of <code>PUBLIC.CAMPAIGN</code>
     */
    public static final Campaign CAMPAIGN = new Campaign();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CampaignRecord> getRecordType() {
        return CampaignRecord.class;
    }

    /**
     * The column <code>PUBLIC.CAMPAIGN.CID</code>.
     */
    public final TableField<CampaignRecord, Integer> CID = createField(DSL.name("CID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.UID</code>.
     */
    public final TableField<CampaignRecord, Integer> UID = createField(DSL.name("UID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.NAME</code>.
     */
    public final TableField<CampaignRecord, String> NAME = createField(DSL.name("NAME"), org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.IMPRESSIONS</code>.
     */
    public final TableField<CampaignRecord, Integer> IMPRESSIONS = createField(DSL.name("IMPRESSIONS"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.CLICKS</code>.
     */
    public final TableField<CampaignRecord, Integer> CLICKS = createField(DSL.name("CLICKS"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.UNIQUES</code>.
     */
    public final TableField<CampaignRecord, Integer> UNIQUES = createField(DSL.name("UNIQUES"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.BOUNCES</code>.
     */
    public final TableField<CampaignRecord, Integer> BOUNCES = createField(DSL.name("BOUNCES"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.CONVERSIONS</code>.
     */
    public final TableField<CampaignRecord, Integer> CONVERSIONS = createField(DSL.name("CONVERSIONS"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.CTR</code>.
     */
    public final TableField<CampaignRecord, Double> CTR = createField(DSL.name("CTR"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.CPA</code>.
     */
    public final TableField<CampaignRecord, Double> CPA = createField(DSL.name("CPA"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.CPC</code>.
     */
    public final TableField<CampaignRecord, Double> CPC = createField(DSL.name("CPC"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.CPM</code>.
     */
    public final TableField<CampaignRecord, Double> CPM = createField(DSL.name("CPM"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.BOUNCE_RATE</code>.
     */
    public final TableField<CampaignRecord, Double> BOUNCE_RATE = createField(DSL.name("BOUNCE_RATE"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.TOTAL_COST</code>.
     */
    public final TableField<CampaignRecord, Double> TOTAL_COST = createField(DSL.name("TOTAL_COST"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.MIN_PAGES_ENABLED</code>.
     */
    public final TableField<CampaignRecord, Boolean> MIN_PAGES_ENABLED = createField(DSL.name("MIN_PAGES_ENABLED"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.MIN_PAGES</code>.
     */
    public final TableField<CampaignRecord, Integer> MIN_PAGES = createField(DSL.name("MIN_PAGES"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.MIN_TIME_ENABLED</code>.
     */
    public final TableField<CampaignRecord, Boolean> MIN_TIME_ENABLED = createField(DSL.name("MIN_TIME_ENABLED"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.MIN_TIME</code>.
     */
    public final TableField<CampaignRecord, Integer> MIN_TIME = createField(DSL.name("MIN_TIME"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.CAMPAIGN.PARSED</code>.
     */
    public final TableField<CampaignRecord, Boolean> PARSED = createField(DSL.name("PARSED"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("FALSE", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>PUBLIC.CAMPAIGN</code> table reference
     */
    public Campaign() {
        this(DSL.name("CAMPAIGN"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.CAMPAIGN</code> table reference
     */
    public Campaign(String alias) {
        this(DSL.name(alias), CAMPAIGN);
    }

    /**
     * Create an aliased <code>PUBLIC.CAMPAIGN</code> table reference
     */
    public Campaign(Name alias) {
        this(alias, CAMPAIGN);
    }

    private Campaign(Name alias, Table<CampaignRecord> aliased) {
        this(alias, aliased, null);
    }

    private Campaign(Name alias, Table<CampaignRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Campaign(Table<O> child, ForeignKey<O, CampaignRecord> key) {
        super(child, key, CAMPAIGN);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<CampaignRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CAMPAIGN;
    }

    @Override
    public UniqueKey<CampaignRecord> getPrimaryKey() {
        return Keys.CAMPAIGN_PK;
    }

    @Override
    public List<UniqueKey<CampaignRecord>> getKeys() {
        return Arrays.<UniqueKey<CampaignRecord>>asList(Keys.CAMPAIGN_PK);
    }

    @Override
    public List<ForeignKey<CampaignRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CampaignRecord, ?>>asList(Keys.CAMPAIGN_USER_UID_FK);
    }

    public User user() {
        return new User(this, Keys.CAMPAIGN_USER_UID_FK);
    }

    @Override
    public Campaign as(String alias) {
        return new Campaign(DSL.name(alias), this);
    }

    @Override
    public Campaign as(Name alias) {
        return new Campaign(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaign rename(String name) {
        return new Campaign(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaign rename(Name name) {
        return new Campaign(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Integer, Integer, String, Integer, Integer, Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Boolean, Integer, Boolean, Integer, Boolean> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
